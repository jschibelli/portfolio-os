import { addPublicationJsonLd } from '@starter-kit/utils/seo/addPublicationJsonLd';
import { getAutogeneratedPublicationOG } from '@starter-kit/utils/social/og';
import request from 'graphql-request';
import { GetStaticProps } from 'next';
import {
	PostFragment,
	PostsByPublicationDocument,
	PostsByPublicationQuery,
	PostsByPublicationQueryVariables,
	PublicationFragment,
} from '../generated/graphql';

// Import all the new components
import LatestPosts from '../components/features/blog/latest-posts';
import Hero from '../components/features/homepage/hero';
import Intro from '../components/features/homepage/intro';
import CTABanner from '../components/features/marketing/cta-banner';
import FeaturedProjects from '../components/features/portfolio/featured-projects';

// Import navigation and footer
import { AppProvider } from '../components/contexts/appContext';
import Chatbot from '../components/features/chatbot/Chatbot';
import ModernHeader from '../components/features/navigation/modern-header';
import { Footer } from '../components/shared/footer';
import { SEOHead } from '../components/shared/seo-head';
import { generateWebSiteStructuredData } from '../lib/structured-data';

const GQL_ENDPOINT = process.env.NEXT_PUBLIC_HASHNODE_GQL_ENDPOINT || 'https://gql.hashnode.com/';

// Constants for better maintainability and consistency
const DEFAULT_SITE_TITLE = 'John Schibelli - Senior Front-End Developer';
const DEFAULT_SITE_DESCRIPTION = 'Senior Front-End Developer with 15+ years of experience building scalable, high-performance web applications. Expert in React, Next.js, TypeScript, and modern development practices. Available for freelance projects and consulting.';

type Props = {
	publication: PublicationFragment;
	recentPosts: PostFragment[];
};

/**
 * Homepage component with comprehensive SEO optimization and structured data
 * @param publication - Publication data from Hashnode
 * @param recentPosts - Array of recent blog posts
 * @returns JSX element for the homepage
 */
export default function Home({ publication, recentPosts }: Props) {
	// Centralized logic for generating site metadata with fallbacks
	const siteTitle = publication.displayTitle || publication.title || DEFAULT_SITE_TITLE;
	const siteDescription = publication.descriptionSEO || DEFAULT_SITE_DESCRIPTION;
	
	// Enhanced error handling for OG image generation
	let ogImage: string;
	try {
		ogImage = getAutogeneratedPublicationOG(publication);
	} catch (error) {
		console.error('Error generating OG image:', error);
		// Fallback to a default image or publication logo
		ogImage = publication.preferences?.logo || '/assets/hero/profile.png';
	}

	return (
		<AppProvider publication={publication}>
			<SEOHead
				title={siteTitle}
				description={siteDescription}
				keywords={[
					'React Developer',
					'Next.js Developer',
					'TypeScript Developer',
					'Front-End Development',
					'Web Development Services',
					'UI/UX Design',
					'Mobile Development',
					'Cloud Solutions',
					'Web Accessibility',
					'Performance Optimization',
				]}
				canonical="/"
				ogImage={ogImage}
				ogType="website"
				structuredData={generateWebSiteStructuredData()}
			/>

			{/* Skip to main content link for accessibility */}
			<a href="#main-content" className="skip-link">
				Skip to main content
			</a>

			{/* Navigation */}
			<ModernHeader publication={publication} />

			{/* Homepage Sections in order */}
			<main id="main-content" role="main">
				{/* 1. Hero Section */}
				<Hero />

				{/* 2. Intro Section */}
				<Intro />

				{/* 3. Featured Projects */}
				<FeaturedProjects />

				{/* 4. Latest Blog Posts */}
				<LatestPosts />

				{/* 5. CTA Banner */}
				<CTABanner />

				{/* 6. Chatbot */}
				<Chatbot />
			</main>

			{/* Footer */}
			<Footer publication={publication} />

		</AppProvider>
	);
}

/**
 * Static props generation for Homepage with comprehensive error handling
 * @returns Promise with publication data and recent posts or fallback data
 */
export const getStaticProps: GetStaticProps<Props> = async () => {
	const host = process.env.NEXT_PUBLIC_HASHNODE_PUBLICATION_HOST || 'mindware.hashnode.dev';

	// Validate environment variables
	if (!process.env.NEXT_PUBLIC_HASHNODE_GQL_ENDPOINT) {
		console.warn('NEXT_PUBLIC_HASHNODE_GQL_ENDPOINT environment variable is not set');
	}

	try {
		const data = await request<PostsByPublicationQuery, PostsByPublicationQueryVariables>(
			GQL_ENDPOINT,
			PostsByPublicationDocument,
			{
				first: 0,
				host: host,
			},
		);

		const publication = data.publication;
		if (!publication) {
			console.error('No publication data found for host:', host);
			return {
				notFound: true,
			};
		}

		// Validate publication data structure
		if (!publication.title && !publication.displayTitle) {
			console.warn('Publication missing title and displayTitle');
		}

		return {
			props: {
				publication,
				recentPosts: [],
			},
			revalidate: 1,
		};
	} catch (error) {
		console.error('Error fetching publication data for Homepage:', error);
		
		// Enhanced fallback response with better error handling
		const fallbackPublication = {
			id: 'fallback-home',
			title: 'John Schibelli',
			displayTitle: 'John Schibelli',
			descriptionSEO: DEFAULT_SITE_DESCRIPTION,
			url: 'https://johnschibelli.com',
			posts: {
				totalDocuments: 0,
			},
			preferences: {
				logo: null,
			},
			author: {
				name: 'John Schibelli',
				profilePicture: null,
			},
			followersCount: 0,
			isTeam: false,
			favicon: null,
			ogMetaData: {
				image: null,
			},
		};

		return {
			props: {
				publication: fallbackPublication as any,
				recentPosts: [],
			},
			revalidate: 1,
		};
	}
};
