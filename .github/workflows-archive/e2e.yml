name: E2E

on:
  pull_request:
    paths:
      - 'apps/site/**'
      - '.github/workflows/**'
  push:
    branches: [ main ]
    paths:
      - 'apps/site/**'
      - '.github/workflows/**'
  schedule:
    - cron: '0 6 * * *'
  workflow_dispatch:

jobs:
  playwright-pr:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.14.0

      - name: Get pnpm store directory
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright browsers
        run: pnpm --filter @mindware-blog/site exec playwright install --with-deps

      - name: Run Playwright (PR: chromium, fast suite)
        run: |
          pnpm --filter @mindware-blog/site exec playwright test tests/ci-integration.spec.ts --project=chromium
          pnpm --filter @mindware-blog/site test:accessibility

      - name: Upload Playwright report (PR)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: apps/site/playwright-report
          if-no-files-found: ignore

      - name: Upload Playwright test results (PR)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-test-results
          path: |
            apps/site/test-results
          if-no-files-found: ignore

  playwright-main:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/heads/main')
    strategy:
      matrix:
        browser: [ chromium, firefox, webkit ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.14.0

      - name: Get pnpm store directory
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright browsers
        run: pnpm --filter @mindware-blog/site exec playwright install --with-deps

      - name: Build site
        run: pnpm --filter @mindware-blog/site build

      - name: Run Playwright (main: matrix + visuals)
        env:
          PW_USE_BUILD: '1'
        run: |
          pnpm --filter @mindware-blog/site exec playwright test tests/ci-integration.spec.ts --project=${{ matrix.browser }}
          pnpm --filter @mindware-blog/site test:accessibility
          pnpm --filter @mindware-blog/site test:seo
          pnpm --filter @mindware-blog/site test:visual

      - name: Upload Playwright report (main)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}
          path: apps/site/playwright-report
          if-no-files-found: ignore

      - name: Upload Playwright test results (main)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-test-results-${{ matrix.browser }}
          path: |
            apps/site/test-results
          if-no-files-found: ignore

  playwright-nightly:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.14.0

      - name: Get pnpm store directory
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright browsers
        run: pnpm --filter @mindware-blog/site exec playwright install --with-deps

      - name: Build site
        run: pnpm --filter @mindware-blog/site build

      - name: Run Playwright (nightly: full)
        env:
          PW_USE_BUILD: '1'
        run: |
          pnpm --filter @mindware-blog/site test:all

      - name: Upload Playwright report (nightly)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-nightly
          path: apps/site/playwright-report
          if-no-files-found: ignore

      - name: Upload Playwright test results (nightly)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-test-results-nightly
          path: |
            apps/site/test-results
          if-no-files-found: ignore


