name: CI (Optimized)

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - "apps/**"
      - "packages/**"
      - ".github/workflows/**"
  push:
    branches: [ main ]
    paths:
      - "apps/**"
      - "packages/**"
      - ".github/workflows/**"

permissions:
  contents: read

concurrency:
  group: ci-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  paths:
    name: Detect changed areas
    runs-on: ubuntu-latest
    outputs:
      site: ${{ steps.filter.outputs.site }}
      dashboard: ${{ steps.filter.outputs.dashboard }}
      packages: ${{ steps.filter.outputs.packages }}
      any: ${{ steps.filter.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            site:
              - 'apps/site/**'
            dashboard:
              - 'apps/dashboard/**'
            packages:
              - 'packages/**'
          list-files: shell

  build-and-test:
    name: Build & Test (matrix per app)
    needs: paths
    if: needs.paths.outputs.any == 'true'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        app: [ "site", "dashboard" ]
        include:
          - app: "site"
            changed: ${{ needs.paths.outputs.site }}
            workspace: "@mindware-blog/site"
            path: "apps/site"
          - app: "dashboard"
            changed: ${{ needs.paths.outputs.dashboard }}
            workspace: "@mindware-blog/dashboard"
            path: "apps/dashboard"
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install pnpm
        run: corepack enable && corepack prepare pnpm@latest --activate

      - name: Restore Turbo cache
        uses: actions/cache@v4
        with:
          path: .turbo
          key: turbo-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            turbo-${{ runner.os }}-

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Skip if this app didn't change
        if: matrix.changed != 'true'
        run: echo "No changes in ${matrix.app}; skipping."

      - name: Lint
        if: matrix.changed == 'true'
        run: pnpm --filter ${matrix.workspace} run lint || echo "No lint script; continuing."

      - name: Typecheck
        if: matrix.changed == 'true'
        run: pnpm --filter ${matrix.workspace} run typecheck || echo "No typecheck script; continuing."

      - name: Unit tests
        if: matrix.changed == 'true'
        run: pnpm --filter ${matrix.workspace} run test --if-present

      - name: Build
        if: matrix.changed == 'true'
        run: pnpm --filter ${matrix.workspace} run build

      - name: Verify Next.js build artifacts
        if: matrix.changed == 'true'
        run: |
          if [ -d "${{ matrix.path }}/.next" ]; then
            echo "✅ ${matrix.app} built"
          else
            echo "❌ ${matrix.app} build artifacts missing" && exit 1
          fi


