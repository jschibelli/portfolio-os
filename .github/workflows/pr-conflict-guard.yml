name: PR Conflict Guard

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  pull-requests: write
  contents: write

jobs:
  guard:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup tools
        run: |
          sudo apt-get update
          sudo apt-get install -y jq gh

      - name: Check mergeability
        id: pr
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          gh auth status || gh auth login --with-token <<< "$GITHUB_TOKEN"
          PR='${{ github.event.pull_request.number }}'
          MERGEABLE=$(gh pr view "$PR" --json mergeable -q .mergeable)
          echo "mergeable=$MERGEABLE" >> $GITHUB_OUTPUT
          echo "Mergeable: $MERGEABLE"

      - name: Try auto-rebase onto base branch
        if: steps.pr.outputs.mergeable == 'CONFLICTING'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          BASE='${{ github.event.pull_request.base.ref }}'
          echo "Base branch: $BASE"
          git fetch origin "$BASE"

          # Rebase; if conflicts, try a safe lockfile regeneration, then rebase again
          if ! git rebase "origin/$BASE"; then
            echo "Rebase had conflicts. Attempt safe fixes..."
            git rebase --abort || true

            if [ -f pnpm-lock.yaml ] || [ -f package-lock.json ] || [ -f yarn.lock ]; then
              echo "Regenerating lockfile..."
              if [ -f pnpm-lock.yaml ]; then
                corepack enable || true
                pnpm i --lockfile-only || true
                git add pnpm-lock.yaml || true
              elif [ -f package-lock.json ]; then
                npm i --package-lock-only || true
                git add package-lock.json || true
              elif [ -f yarn.lock ]; then
                corepack enable || true
                yarn install --mode update-lockfile || true
                git add yarn.lock || true
              fi
              if git diff --cached --quiet; then
                echo "No lockfile changes detected"
              else
                git commit -m "chore: regenerate lockfile to aid conflict resolution"
              fi
            fi

            echo "Retry rebase..."
            git rebase "origin/$BASE"
          fi

          git push --force-with-lease

      - name: Comment and label if unresolved
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          gh auth status || gh auth login --with-token <<< "$GITHUB_TOKEN"
          PR='${{ github.event.pull_request.number }}'
          gh pr comment "$PR" --body "Merge conflicts detected and could not be auto-resolved. Please resolve locally:

\n\n\`\`\`bash
gh pr checkout $PR
git fetch origin '${{ github.event.pull_request.base.ref }}' && git rebase origin/'${{ github.event.pull_request.base.ref }}'
# resolve files shown by: git status
git add -A && git rebase --continue
git push --force-with-lease
\`\`\`
"
          gh pr edit "$PR" --add-label "needs: conflict-resolution" || true

