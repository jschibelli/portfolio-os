name: Auto-Configure Issues (Optimized)

on:
  issues:
    types: [opened, edited]
  workflow_dispatch:
    inputs:
      issue_number:
        description: "Issue number to configure"
        required: true
        type: string
      priority:
        description: "Priority (P0, P1, P2)"
        default: "P1"
        type: choice
        options: [P0, P1, P2]
      size:
        description: "T-shirt size (XS, S, M, L, XL)"
        default: "M"
        type: choice
        options: [XS, S, M, L, XL]
      app:
        description: "App area"
        default: "site"
        type: choice
        options: [site, dashboard, shared]
      area:
        description: "Functional area label"
        default: "frontend"
        type: choice
        options: [frontend, backend, infra, docs]
      milestone:
        description: "Milestone title (optional)"
        required: false
        type: string

permissions:
  issues: write
  contents: read

concurrency:
  group: issues-${{ github.event.issue.number || github.event.inputs.issue_number }}
  cancel-in-progress: true

jobs:
  label-and-triage:
    runs-on: ubuntu-latest
    if: github.event.action == 'opened' || github.event.action == 'edited' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4

      - name: Determine inputs
        id: vars
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "issue=${{ github.event.inputs.issue_number }}" >> $GITHUB_OUTPUT
            echo "priority=${{ github.event.inputs.priority }}" >> $GITHUB_OUTPUT
            echo "size=${{ github.event.inputs.size }}" >> $GITHUB_OUTPUT
            echo "app=${{ github.event.inputs.app }}" >> $GITHUB_OUTPUT
            echo "area=${{ github.event.inputs.area }}" >> $GITHUB_OUTPUT
            echo "milestone=${{ github.event.inputs.milestone }}" >> $GITHUB_OUTPUT
          else
            echo "issue=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
            echo "priority=P1" >> $GITHUB_OUTPUT
            echo "size=M" >> $GITHUB_OUTPUT
            echo "app=site" >> $GITHUB_OUTPUT
            echo "area=frontend" >> $GITHUB_OUTPUT
            echo "milestone=" >> $GITHUB_OUTPUT
          fi

      - name: Ensure labels exist
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh label create "priority:${{ steps.vars.outputs.priority }}" --color BFD4F2 --force || true
          gh label create "size:${{ steps.vars.outputs.size }}" --color C2E0C6 --force || true
          gh label create "area:${{ steps.vars.outputs.app }}" --color FAE17E --force || true
          gh label create "area:${{ steps.vars.outputs.area }}" --color F9D0C4 --force || true

      - name: Apply labels
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh issue edit ${{ steps.vars.outputs.issue }} \
            --add-label "priority:${{ steps.vars.outputs.priority }}" \
            --add-label "size:${{ steps.vars.outputs.size }}" \
            --add-label "area:${{ steps.vars.outputs.app }}" \
            --add-label "area:${{ steps.vars.outputs.area }}"

      - name: Set milestone (optional)
        if: ${{ steps.vars.outputs.milestone != '' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          echo "Setting milestone: ${{ steps.vars.outputs.milestone }}"
          
          # Get existing milestone ID
          ms_id=$(gh api repos/${{ github.repository }}/milestones --paginate -q '.[] | select(.title=="${{ steps.vars.outputs.milestone }}").number' || echo "")
          
          # Create milestone if it doesn't exist
          if [ -z "$ms_id" ]; then
            echo "Creating new milestone: ${{ steps.vars.outputs.milestone }}"
            ms_id=$(gh api repos/${{ github.repository }}/milestones -f title='${{ steps.vars.outputs.milestone }}' -f state=open -q .number)
          fi
          
          # Set milestone on issue
          if [ -n "$ms_id" ]; then
            gh issue edit ${{ steps.vars.outputs.issue }} --milestone "$ms_id"
            echo "Successfully set milestone $ms_id on issue ${{ steps.vars.outputs.issue }}"
          else
            echo "Warning: Could not create or find milestone '${{ steps.vars.outputs.milestone }}'"
            exit 1
          fi


